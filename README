= DataGraph

Simplified eager loading for ActiveRecord

== Description

The eager loading mechanism of ActiveRecord has {several
cases}[http://gist.github.com/492409] where these two are not equivalent as
you might expect:

  Model.find(:first, :include => :assoc).assoc
  Model.find(:first).assoc

It's often tricky, although not impossible, to make associations that work
correctly with include. DataGraph makes eager loading easier by providing a
straightforward way to declare and load a specific set of associated data.

== Usage

DataGraph selects data using a syntax based on the serialization methods.

  require 'data_graph'
  graph = Model.data_graph(
    :only => [:a, :b, :c],
    :include => {
      :assoc => {
        :only => [:x, :y]
  }})
  
  data = graph.find(:first)
  data.a                       # => 'A'
  data.assoc.x                 # => 'X'
  data.assoc.z                 # !> ActiveRecord::MissingAttributeError

Any number of associations may be specified this way, and to any nesting
depth. DataGraph always uses a 'one query per-association' strategy and never
reverts to left outer joins the way include sometimes will.

== Installation

DataGraph is available as a gem on {Gemcutter}[http://gemcutter.org/gems/data_graph]

  % gem install data_graph

== Info 

Developer:: {Simon Chiang}[http://bahuvrihi.wordpress.com]
License:: {MIT-Style}[link:files/License_txt.html]